"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const t=new class{constructor(){this.proxies=new WeakSet}cache(t){this.proxies.add(t)}exists(t){return this.proxies.has(t)}};Object.freeze(t);const e=(t,e)=>{var r;if(!t.subs)return!1;const s=null===(r=t.subs)||void 0===r?void 0:r.indexOf(e);if(-1===s)return!1;t.subs=[...t.subs.slice(0,s),...t.subs.slice(s+1)]},r=(t,e)=>{const r="**"===t.propName;if(!t.children)return r?[t]:null;const s=[],o=t.children[e];return r&&s.push(t),o&&s.push(o),t.children["*"]&&s.push(t.children["*"]),t.children["**"]&&s.push(t.children["**"]),s.length?s:null},s=Symbol("Patcher"),o=Symbol("WatcherProxy"),a=Symbol("TargetRef"),n=t=>{const e=new Map;for(let r=0;r<t.length;r+=1){const s=t[r];if(!e.has(s))for(let r=0;r<t.length;r+=1){const o=t[r];s===o||e.has(o)||o.path.includes(s.path)&&i(s,o)&&e.set(o,!0)}}return t.filter(t=>!e.has(t))},i=(t,e)=>{const r=t.path;if(!e.path.includes(r))return!1;switch(t.op){case"remove":return"add"===e.op&&(t.op="replace",t.value=e.value),!0;case"add":return h(t,e),!0;case"replace":return!0;default:return!1}},h=(t,e)=>{const r=t.value,s=e.path.replace(t.path,""),o=s.split("/").filter(t=>!!t);l({...e,path:s,pathArray:o},r)},l=(t,e)=>{const{op:r,pathArray:o,value:a}=t,n=o.length;if(!n)return;let i,h=e,l=h.hasOwnProperty(s)?{entity:h,pathArray:[...o]}:null;for(let t=0;t<n-1;t+=1){if(i=o[t],!h.hasOwnProperty(i))throw new Error(`applyJSONPatchOperation cannot walk json patch path ${o.join("/")}. Cannot access path ${[...o].slice(0,t).join("/")}.`);h=h[i],h.hasOwnProperty(s)&&(l={entity:h,pathArray:[...o].slice(t+1)})}const c=o[n-1];if(l&&"applyPatch"in l.entity&&"function"==typeof l.entity.applyPatch){const e=t.pathArray.filter(t=>-1!==(null==l?void 0:l.pathArray.indexOf(t))),r=e.join("/");l.entity.applyPatch({...t,path:r,pathArray:e})}else switch(r){case"add":case"replace":Object.assign(h,{[c]:a});break;case"remove":delete h[c]}};class c{constructor(){this.mutationMaps=new Map,this.mutationDirtyPaths=new Map,this.mutationSelectorPointers=new Map,this.getSubProxy=(t,e,r,s)=>{const o=this.mutationMaps.get(t);let a=null==o?void 0:o.get(r);return a||(a=new Proxy(r,new y({target:r,selectorPointerArray:e,dirtyPaths:this.mutationDirtyPaths.get(t),pathArray:s,proxyfyAccess:(e,r,s)=>this.getSubProxy(t,r,e,s)})),null==o||o.set(r,a)),a}}startMutation(t){this.mutationMaps.set(t,new WeakMap);const e=new WeakMap,r=new Set,s=new Array(d.getSelectorTree(t)),o=new Proxy(t,new y({target:t,selectorPointerArray:s,dirtyPaths:r,proxyfyAccess:(e,r,s)=>this.getSubProxy(t,r,e,s)}));e.set(t,o),this.mutationDirtyPaths.set(t,r),this.mutationMaps.set(t,e),this.mutationSelectorPointers.set(t,s)}hasRoot(t){return this.mutationMaps.has(t)}commit(t){const e=this.mutationDirtyPaths.get(t);if(!e)return[];const r=Array.from(e).reduce((t,e)=>{const{writeSelectorPointerArray:r}=e;return t.push(...r),t},[]),s=[...new Set(r)].filter(t=>"root"!==t.propName),o=Array.from(e).reduce((t,e)=>{const{pathArray:r,ops:s}=e,o=r.length?"/"+r.join("/"):"";for(let e=0;e<s.length;e+=1){const a=s[e],{old:n,value:i}=a;n!==i&&t.push({...a,path:`${o}/${a.path}`,pathArray:[...r,a.path]})}return t},[]),a=n(o);return d.runSelectorPointers(t,s,a),this.mutationMaps.delete(t),this.mutationDirtyPaths.delete(t),a}mutate(t,e){var r;const s=!this.hasRoot(t);s&&this.startMutation(t);const o=null===(r=this.mutationMaps.get(t))||void 0===r?void 0:r.get(t);if(o)return e(o),s?this.commit(t):[]}}const p=new c,u=(t,e)=>p.mutate(t,e);class y{constructor(t){this.deleted={},this.original={},this.ops=[],this.writeSelectorPointerArray=[];const{target:e,pathArray:r=[],proxyfyAccess:s,dirtyPaths:o}=t;this.pathArray=r,this.targetRef=e,this.proxyfyAccess=s,this.dirtyPaths=o,this.selectorPointerArray=t.selectorPointerArray}get(e,s){if("symbol"==typeof s&&s===a)return this.targetRef;if("symbol"==typeof s&&s===o)return!0;if("symbol"==typeof s||"hasOwnProperty"===s)return Reflect.get(e,s);if("string"==typeof s&&this.deleted.hasOwnProperty(s))return;const n=e[s];if("object"==typeof n&&null!==n){if(t.exists(n))return n;const{selectorPointerArray:e}=this,o=e.reduce((t,e)=>{const o=r(e,s);return o&&t.push(...o),t},[]),a=this.proxyfyAccess(n,o,[...this.pathArray,s]);return t.exists(a)||t.cache(a),a}return n}set(t,e,s){this.writeSelectorPointerArray.push(...this.selectorPointerArray.reduce((t,s)=>{const o=r(s,e);return o&&t.push(...o),t},[])),this.dirtyPaths.add(this);let n="add";t[e]&&(n=s?"replace":"remove"),!this.original.hasOwnProperty(e)&&t.hasOwnProperty(e)&&(this.original[e]=t[e]);let i=s;if("object"==typeof s&&null!==s){const t=s;i=t.hasOwnProperty(o)?t[a]:{...s}}let h=this.original[e];return"object"==typeof h&&null!==h&&(h={...h}),this.ops.push({op:n,path:String(e),old:h,value:i}),Reflect.set(t,e,s)}deleteProperty(t,e){if(e in t&&"string"==typeof e){this.writeSelectorPointerArray.push(...this.selectorPointerArray.reduce((t,s)=>{const o=r(s,e);return o&&t.push(...o),t},[])),this.dirtyPaths.add(this),this.deleted[e]=!0,this.original.hasOwnProperty(e)||(this.original[e]=t[e]);let s=this.original[e];"object"==typeof s&&null!==s&&(s={...s}),this.ops.push({op:"remove",path:""+e,old:s,value:void 0})}return Reflect.deleteProperty(t,e)}getOwnPropertyDescriptor(t,e){if("string"!=typeof e||!this.deleted[e])return e===o?{configurable:!0,value:!0}:Reflect.getOwnPropertyDescriptor(t,e)}ownKeys(t){return Reflect.ownKeys(t)}has(t,e){return Reflect.has(t,e)}}const d=new class{constructor(){this.selectorMap=new WeakMap,this.selectorTrees=new WeakMap}getSelectorTree(t){if(!this.selectorTrees.has(t)){const e={propName:"root"};return this.selectorTrees.set(t,e),e}return this.selectorTrees.get(t)}runSelectorPointers(t,e,r){const s=new Set,o=e=>{s.has(e)||(s.add(e),e(t,r))},a=t=>{t.forEach(t=>{const{subs:e,children:r}=t;null==e||e.forEach(o),r&&a(Object.values(r))})};a(e)}registerSelector(t,e){let r=this.selectorMap.get(t);r||(r={selectors:[]},this.selectorMap.set(t,r)),r.selectors.push(e)}removeSelector(t,e){const r=this.selectorMap.get(t);if(!r)return;const s=r.selectors.indexOf(e);-1!==s&&(r.selectors=[...r.selectors.slice(0,s),...r.selectors.slice(s+1)])}processPatches(t,e){const r=this.selectorMap.get(t);if(!r||!r.selectors||0===r.selectors.length)return;const s=e.map(t=>t.pathArray);for(let o=0;o<r.selectors.length;o+=1){const a=r.selectors[o];a.match(s)&&a.run(t,e)}}};exports.IObservableDomain=class{},exports.MutationsManager=c,exports.Patcher=s,exports.ProxyMutationObjectHandler=y,exports.TargetRef=a,exports.WatcherProxy=o,exports.applyInternalMutation=(t,e)=>{t.forEach(t=>{l(t,e)})},exports.applyJSONPatchOperation=l,exports.combinedJSONPatches=n,exports.inversePatch=t=>{const{path:e,pathArray:r,op:s,value:o,old:a}=t;switch(s){case"add":return{op:"remove",value:a,old:o,pathArray:r,path:e};case"remove":return{op:"add",value:a,old:o,pathArray:r,path:e};case"replace":return{op:"replace",value:a,old:o,pathArray:r,path:e}}},exports.mutate=u,exports.mutateFromPatches=(t,e)=>{u(t,t=>{for(let r=0;r<e.length;r+=1)l(e[r],t)})},exports.pathMatchesSource=(t,e)=>{if(-1===t.indexOf("**")&&t.length!==e.length)return!1;for(let r=0;r<t.length;r+=1)if(t[r]!==e[r]&&("*"!==t[r]||!e[r])){if(r+1===t.length&&"**"===t[r]&&e[r])return!0;if(e[r]!==t[r])return!1}return!0},exports.select=(t,r,s)=>{const o=d.getSelectorTree(t),a=new Set,n=(...t)=>{const e=s(...t);a.forEach(t=>t(e))},i=r.map(t=>((t,e,r)=>{var s,o,a;let n=t,i=[...e];for(;i.length;){const t=i.shift();n.children=null!==(s=n.children)&&void 0!==s?s:{},n.children[t]=null!==(o=n.children[t])&&void 0!==o?o:{propName:t},n=n.children[t]}return n.subs=null!==(a=n.subs)&&void 0!==a?a:[],n.subs.push(r),n})(o,(t=>t.startsWith("/")?t.substring(1).split("/"):t.split("/"))(t),n));return{reshape:()=>{throw new Error("Reshape method is no longer supported")},observe:t=>(a.add(t),()=>{a.delete(t)}),dispose:()=>{for(const t of i)e(t,s)}}};
